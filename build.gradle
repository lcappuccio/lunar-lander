repositories {
	mavenCentral()
//	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

dependencies {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'jacoco'
	testCompile "org.mockito:mockito-core:1.+"
	testCompile "junit:junit:4.11+"
}

jacoco {
	toolVersion = "0.7.1.201405082137"
	reportsDir = file("$buildDir")
}

allprojects {
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: 'java'
	apply plugin: 'base'
	apply plugin: 'jacoco'

	version = '0.3-SNAPSHOT'
	ext {
		appName = 'lunar-lander'
		gdxVersion = '1.6.1'
		roboVMVersion = '1.2.0'
		box2DLightsVersion = '1.3'
		ashleyVersion = '1.4.0'
		aiVersion = '1.5.0'
	}

	repositories {
		mavenCentral()
//		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
//		maven { url "https://oss.sonatype.org/content/repositories/releases/" }
	}
}

project(":desktop") {

	dependencies {
		compile project(":core")
		compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
		testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
		compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
		compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
		compile "org.mockito:mockito-core:1.+"
		compile "junit:junit:4.11+"
	}
}

project(":core") {

	dependencies {
		compile "com.badlogicgames.gdx:gdx:$gdxVersion"
		compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
		testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
		compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
		compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
		compile "org.mockito:mockito-core:1.+"
		compile "junit:junit:4.11+"
	}
}

tasks.eclipse.doLast {
	delete ".project"
}


subprojects {
	apply plugin: "java"
	dependencies {
		testCompile 'junit:junit:4.11'
	}
	jacocoTestReport {
		reports {
			html.enabled = true
			xml.enabled = true
			csv.enabled = false
		}
	}
}

task jacocoRootReport(type: JacocoReport) {
	dependsOn = subprojects.test
	additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
	sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
	classDirectories = files(subprojects.sourceSets.main.output)
	executionData = files(subprojects.jacocoTestReport.executionData)
	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = false
	}
	onlyIf = {
		true
	}
	doFirst {
		executionData = files(executionData.findAll {
			it.exists()
		})
	}
}

check.dependsOn jacocoRootReport